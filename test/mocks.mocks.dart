// Mocks generated by Mockito 5.3.2 from annotations
// in verificac19/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:typed_data' as _i10;

import 'package:dio/src/adapter.dart' as _i4;
import 'package:dio/src/options.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i11;
import 'package:verificac19/src/data/local/local_repository.dart' as _i5;
import 'package:verificac19/src/data/model/crl.dart' as _i3;
import 'package:verificac19/src/data/model/crl_status.dart' as _i2;
import 'package:verificac19/src/data/model/validation_rule.dart' as _i7;
import 'package:verificac19/src/data/remote/remote_repository.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCRLStatus_0 extends _i1.SmartFake implements _i2.CRLStatus {
  _FakeCRLStatus_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCRL_1 extends _i1.SmartFake implements _i3.CRL {
  _FakeCRL_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseBody_2 extends _i1.SmartFake implements _i4.ResponseBody {
  _FakeResponseBody_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalRepository extends _i1.Mock implements _i5.LocalRepository {
  MockLocalRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<DateTime?> getLastUpdateTime() => (super.noSuchMethod(
        Invocation.method(
          #getLastUpdateTime,
          [],
        ),
        returnValue: _i6.Future<DateTime?>.value(),
      ) as _i6.Future<DateTime?>);
  @override
  bool needRulesUpdate() => (super.noSuchMethod(
        Invocation.method(
          #needRulesUpdate,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool needSignaturesUpdate() => (super.noSuchMethod(
        Invocation.method(
          #needSignaturesUpdate,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool needSignaturesListUpdate() => (super.noSuchMethod(
        Invocation.method(
          #needSignaturesListUpdate,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool needCRLUpdate() => (super.noSuchMethod(
        Invocation.method(
          #needCRLUpdate,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i6.Future<void> storeRules(List<_i7.ValidationRule>? rules) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeRules,
          [rules],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> storeSignatures(Map<String, String>? signatures) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeSignatures,
          [signatures],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> storeSignaturesList(List<String>? signaturesList) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeSignaturesList,
          [signaturesList],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> storeCRL({
    List<String>? insertions,
    List<String>? deletions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeCRL,
          [],
          {
            #insertions: insertions,
            #deletions: deletions,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> storeCRLVersion(int? version) => (super.noSuchMethod(
        Invocation.method(
          #storeCRLVersion,
          [version],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  List<_i7.ValidationRule> getRules() => (super.noSuchMethod(
        Invocation.method(
          #getRules,
          [],
        ),
        returnValue: <_i7.ValidationRule>[],
      ) as List<_i7.ValidationRule>);
  @override
  Map<String, String> getSignatures() => (super.noSuchMethod(
        Invocation.method(
          #getSignatures,
          [],
        ),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  List<String> getSignaturesList() => (super.noSuchMethod(
        Invocation.method(
          #getSignaturesList,
          [],
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  List<String> getCRL() => (super.noSuchMethod(
        Invocation.method(
          #getCRL,
          [],
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  int getCRLVersion() => (super.noSuchMethod(
        Invocation.method(
          #getCRLVersion,
          [],
        ),
        returnValue: 0,
      ) as int);
  @override
  bool isUvciRevoked(String? uvci) => (super.noSuchMethod(
        Invocation.method(
          #isUvciRevoked,
          [uvci],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [RemoteRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteRepository extends _i1.Mock implements _i8.RemoteRepository {
  MockRemoteRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i7.ValidationRule>> getValidationRules() =>
      (super.noSuchMethod(
        Invocation.method(
          #getValidationRules,
          [],
        ),
        returnValue:
            _i6.Future<List<_i7.ValidationRule>>.value(<_i7.ValidationRule>[]),
      ) as _i6.Future<List<_i7.ValidationRule>>);
  @override
  _i6.Future<Map<String, String>> getSignatures() => (super.noSuchMethod(
        Invocation.method(
          #getSignatures,
          [],
        ),
        returnValue: _i6.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i6.Future<Map<String, String>>);
  @override
  _i6.Future<List<String>> getSignaturesList() => (super.noSuchMethod(
        Invocation.method(
          #getSignaturesList,
          [],
        ),
        returnValue: _i6.Future<List<String>>.value(<String>[]),
      ) as _i6.Future<List<String>>);
  @override
  _i6.Future<_i2.CRLStatus> getCRLStatus({int? version}) => (super.noSuchMethod(
        Invocation.method(
          #getCRLStatus,
          [],
          {#version: version},
        ),
        returnValue: _i6.Future<_i2.CRLStatus>.value(_FakeCRLStatus_0(
          this,
          Invocation.method(
            #getCRLStatus,
            [],
            {#version: version},
          ),
        )),
      ) as _i6.Future<_i2.CRLStatus>);
  @override
  _i6.Future<_i3.CRL> getCRLChunk({
    int? version,
    int? chunk,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCRLChunk,
          [],
          {
            #version: version,
            #chunk: chunk,
          },
        ),
        returnValue: _i6.Future<_i3.CRL>.value(_FakeCRL_1(
          this,
          Invocation.method(
            #getCRLChunk,
            [],
            {
              #version: version,
              #chunk: chunk,
            },
          ),
        )),
      ) as _i6.Future<_i3.CRL>);
}

/// A class which mocks [HttpClientAdapter].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClientAdapter extends _i1.Mock implements _i4.HttpClientAdapter {
  MockHttpClientAdapter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.ResponseBody> fetch(
    _i9.RequestOptions? options,
    _i6.Stream<_i10.Uint8List>? requestStream,
    _i6.Future<dynamic>? cancelFuture,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [
            options,
            requestStream,
            cancelFuture,
          ],
        ),
        returnValue: _i6.Future<_i4.ResponseBody>.value(_FakeResponseBody_2(
          this,
          Invocation.method(
            #fetch,
            [
              options,
              requestStream,
              cancelFuture,
            ],
          ),
        )),
      ) as _i6.Future<_i4.ResponseBody>);
  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i11.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
      ) as Set<String>);
  @override
  Object? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as Object?);
  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);
  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);
  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);
  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);
  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);
  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);
  @override
  _i6.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
